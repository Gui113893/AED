==10363== Memcheck, a memory error detector
==10363== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==10363== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==10363== Command: ./Tests 12
==10363== 
==10363== Invalid read of size 8
==10363==    at 0x109FDA: PersonSetSize (PersonSet.c:46)
==10363==    by 0x1096F7: main (Tests.c:72)
==10363==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==10363== 
==10363== 
==10363== Process terminating with default action of signal 11 (SIGSEGV)
==10363==  Access not within mapped region at address 0x0
==10363==    at 0x109FDA: PersonSetSize (PersonSet.c:46)
==10363==    by 0x1096F7: main (Tests.c:72)
==10363==  If you believe this happened as a result of a stack
==10363==  overflow in your program's main thread (unlikely but
==10363==  possible), you can try to increase the size of the
==10363==  main thread stack using the --main-stacksize= flag.
==10363==  The main thread stack size used in this run was 8388608.
==10363== 
==10363== HEAP SUMMARY:
==10363==     in use at exit: 4,458 bytes in 21 blocks
==10363==   total heap usage: 21 allocs, 0 frees, 4,458 bytes allocated
==10363== 
==10363== LEAK SUMMARY:
==10363==    definitely lost: 0 bytes in 0 blocks
==10363==    indirectly lost: 0 bytes in 0 blocks
==10363==      possibly lost: 0 bytes in 0 blocks
==10363==    still reachable: 4,458 bytes in 21 blocks
==10363==         suppressed: 0 bytes in 0 blocks
==10363== Rerun with --leak-check=full to see details of leaked memory
==10363== 
==10363== For lists of detected and suppressed errors, rerun with: -s
==10363== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
